:root{
  --white: #ffffff;
  --black: #212121;
  --primary-color: #ffc107;
  --secondary-color: #0097a7;
  --gray: #757575;
  --sweetGray: #dfe9f3;
}

html{
  font-size: 62.5%;
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body{
  font-size: 16px;/* 1rem = 10px */
  font-family: 'Krub', Arial, Helvetica, sans-serif;
  background-image: linear-gradient( to top, var(--sweetGray) 0%, var(--white) 100% );
}

h1 {
  font-size: 3.8rem;
}

h2{
  font-size: 2.8rem;
}

h3{
  font-size: 1.8rem;
}

h1,h2,h3 {
  text-align: center;
}

.title span{
  font-size: 2rem;
}

.container {
  max-width: 120rem;
  margin: 0 auto;
}

.button {
  background-color: var(--secondary-color);
  border: none;
  border-radius: 0.5rem;
  color: var(--white);
  font-size: 2rem;
  font-weight: bold;
  margin-top: 3rem;
  padding: 1rem 3rem;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  width: 90%;
}

.button:hover {
  cursor: pointer;
}

.shadow {
  -webkit-box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 0.48);
  -moz-box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 0.48);
  box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 0.48);
  border-radius: 1rem;
  background-color: var(--white);
  padding: 2rem;
}


/* Utilities */
.d-flex {
  display: flex;
}

.jc-right {
  justify-content: flex-end;
}

/* Utilities */
.w-sm-100 {
  width: 100%;
}


.background-nav {
  background-color: var(--secondary-color);
}

.primary-nav{
  display: flex;
  flex-direction: column;
}

.primary-nav a {
  display: block;
  color: var(--white);
  font-size: 1.7rem;
  font-weight: 700;
  padding: 1rem;
  text-align: center;
  text-decoration: none;
}

.primary-nav a:hover{
  background-color: var(--primary-color);
  color: var(--black);
}

.hero {
  background-image: url(../img/hero.jpg);
  background-repeat: no-repeat;
  background-size: cover;
  height: 450px;
  position: relative;
  margin-bottom: 2rem;
}

.content-hero {
  align-items: center;
  background-color: rgba(0, 0, 0, .7); /* last syntax */
  background-color: rgb(0 0 0 / 70%);
  display: flex;
  flex-direction: column;
  height: 100%;
  justify-content: center;
  position: absolute;
  width: 100%;
}

.content-hero h2,
.content-hero p {
  color: var(--white);
}

.location {
  display: flex;
  align-items: flex-end;
}

.service {
  align-items: center;
  display: flex;
  flex-direction: column;
}

.service h3 {
  color: var(--secondary-color);
  font-weight: normal;
}

.service p {
  line-height: 2;
}

.service .icons {
  align-items: center;
  background-color: var(--primary-color);
  border-radius: 50%;
  display: flex;
  justify-content: space-evenly;
  height: 15rem;
  width: 15rem;
}

.contact-form {
  background-color: var(--gray);
  border-radius: 1rem;
  margin: 0 auto;
  padding: 2rem;
  width: min( 60rem, 100%);
}

.contact-form fieldset {
  border: none;
}

.contact-form legend {
  color: var(--primary-color);
  font-size: 1.8rem;
  font-weight: bold;
  margin-bottom: 2rem;
  text-align: center;
  text-transform: uppercase;
}

.field {
  margin-bottom: 1rem;
}

.field label {
  color: var(--white);
  display: block;
  font-weight: bold;
  margin-bottom: 0.5rem;
}

.field input,
.field textarea {
  border: none;
  border-radius: 0.5rem;
  padding: 1.5rem;
  width: 100%;
}

.field textarea {
  height: 20rem;
}


/* Footer */
.footer {
  text-align: center;
}

/*
*   Is a standard convention displays when use media queries
*/

/* For smartphones */
@media (min-width: 480px) {
  .primary-nav {
    flex-direction: row;
    justify-content: space-between;
   }
}

/* For tablets or ipads */
@media (min-width: 768px) {
  .button {
    width: auto;
  }

  .w-sm-100 {
    width: auto;
  }

  /* services */
  /*
  * I used CSS Grid
  */
  .services {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    column-gap: 1rem;
  }

  .fields-container {
    column-gap: 1rem;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: auto auto 20rem;
  }

  .field:nth-child(3),
  .field:nth-child(4) {
    grid-column: 1 / 3;
  }
}

/* For laptops and PC */
@media (min-width: 1140px) {
     
}

/* For TV's */
@media (min-width: 1400px) {
     
}